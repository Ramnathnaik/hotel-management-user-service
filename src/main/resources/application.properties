#Server port configuration
server.port=8081

#Server name configuration
spring.application.name=USER-SERVICE

#Datasource configuration
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.name=microservices
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

#Config Client configuration
spring.config.import=optional:configserver:http://localhost:8085

#Configuration of profile
# spring.profiles.active=dev

#Eureka client configuration
# eureka.instance.prefer-ip-address=true
# eureka.client.fetch-registry=true
# eureka.client.register-with-eureka=true
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Actuator Configuration
management.health.cricuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#Resilience4j Configuration - CircuitBreaker
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenSate=3
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
resilience4j.cricuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED

#Resilience4j Configuration - Retry
resilience4j.retry.instances.ratingHotelRetry.max-attempts=3
resilience4j.retry.instances.ratingHotelRetry.wait-duration=2s

#Resilience4j Configuration - Rate Limiter
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.timeout-duration=2s